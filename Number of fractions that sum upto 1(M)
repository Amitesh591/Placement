int gcd(int x,int y){ return y==0?x:gcd(y,x%y); }

int twoSum(vector<int> A,vector<int> B){
    
    int ans=0,M=1000000007;
    unordered_map<long,int>mymap;
    
    for(int i=0;i<A.size();i++){
        int p=A[i];
        int q=B[i];
        if(p>q)continue;
        
        int g=gcd(p,q);
        p/=g;
        q/=g;
        // fraction=p/q, we need (q-p)/q for the other term
        long h=(long) (q-p)*M+q;
    
        if(mymap.count(h)>0)ans=(ans+mymap[h])%M;
        
        mymap[(long) p*M+q]++;
    }
    return ans;
}

int main(void){
    
    cout<<twoSum({1,1,2},{3,2,3})<<endl;
    cout<<twoSum({1,1,1},{2,2,2})<<endl;
    cout<<twoSum({1,2,3,1,2,12,8,4},{5,10,15,2,4,15,10,5})<<endl;
    cout<<twoSum({5,6,5},{11,11,11})<<endl;
    return 0;
}
